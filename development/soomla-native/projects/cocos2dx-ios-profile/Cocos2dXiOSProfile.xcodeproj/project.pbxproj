// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		C0B3C5F3168C6D0C00161FAA /* Foundation.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = C0B3C5F2168C6D0C00161FAA /* Foundation.framework */; };
		F8BBDC9A1AB1D40600FD9403 /* ProfileBridge.mm in Sources */ = {isa = PBXBuildFile; fileRef = F8BBDC961AB1D40600FD9403 /* ProfileBridge.mm */; };
		F8BBDC9C1AB1D40600FD9403 /* ProfileBridge.h in Headers */ = {isa = PBXBuildFile; fileRef = F8BBDC981AB1D40600FD9403 /* ProfileBridge.h */; settings = {ATTRIBUTES = (Public, ); }; };
		F8BBDCA01AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.mm in Sources */ = {isa = PBXBuildFile; fileRef = F8BBDC9E1AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.mm */; };
		F8BBDCA11AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.h in Headers */ = {isa = PBXBuildFile; fileRef = F8BBDC9F1AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.h */; settings = {ATTRIBUTES = (Public, ); }; };
/* End PBXBuildFile section */

/* Begin PBXFileReference section */
		9D1D39B719018BB0000EC503 /* Prefix.pch */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = Prefix.pch; sourceTree = "<group>"; };
		C0B3C5EF168C6D0C00161FAA /* libCocos2dXiOSProfile.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libCocos2dXiOSProfile.a; sourceTree = BUILT_PRODUCTS_DIR; };
		C0B3C5F2168C6D0C00161FAA /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = System/Library/Frameworks/Foundation.framework; sourceTree = SDKROOT; };
		F8BBDC961AB1D40600FD9403 /* ProfileBridge.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; path = ProfileBridge.mm; sourceTree = "<group>"; };
		F8BBDC981AB1D40600FD9403 /* ProfileBridge.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ProfileBridge.h; sourceTree = "<group>"; };
		F8BBDC9E1AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.mm */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.objcpp; path = CCProfileBridgeBinderIos.mm; sourceTree = "<group>"; };
		F8BBDC9F1AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CCProfileBridgeBinderIos.h; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		C0B3C5EC168C6D0C00161FAA /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C0B3C5F3168C6D0C00161FAA /* Foundation.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		C0B3C5E4168C6D0C00161FAA = {
			isa = PBXGroup;
			children = (
				F821FFC219A752ED008DB661 /* ProfileCocos2dx */,
				9D1D39B719018BB0000EC503 /* Prefix.pch */,
				C0B3C5F1168C6D0C00161FAA /* Frameworks */,
				C0B3C5F0168C6D0C00161FAA /* Products */,
			);
			sourceTree = "<group>";
		};
		C0B3C5F0168C6D0C00161FAA /* Products */ = {
			isa = PBXGroup;
			children = (
				C0B3C5EF168C6D0C00161FAA /* libCocos2dXiOSProfile.a */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		C0B3C5F1168C6D0C00161FAA /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				C0B3C5F2168C6D0C00161FAA /* Foundation.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		F821FFC219A752ED008DB661 /* ProfileCocos2dx */ = {
			isa = PBXGroup;
			children = (
				F821FFC319A752ED008DB661 /* ProfileBridge */,
			);
			path = ProfileCocos2dx;
			sourceTree = "<group>";
		};
		F821FFC319A752ED008DB661 /* ProfileBridge */ = {
			isa = PBXGroup;
			children = (
				F8BBDC9E1AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.mm */,
				F8BBDC9F1AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.h */,
				F8BBDC961AB1D40600FD9403 /* ProfileBridge.mm */,
				F8BBDC981AB1D40600FD9403 /* ProfileBridge.h */,
			);
			path = ProfileBridge;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		9D64AAD0190653C40091D664 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F8BBDC9C1AB1D40600FD9403 /* ProfileBridge.h in Headers */,
				F8BBDCA11AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		C0B3C5EE168C6D0C00161FAA /* Cocos2dXiOSProfile */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C0B3C5FD168C6D0C00161FAA /* Build configuration list for PBXNativeTarget "Cocos2dXiOSProfile" */;
			buildPhases = (
				C0B3C5EB168C6D0C00161FAA /* Sources */,
				C0B3C5EC168C6D0C00161FAA /* Frameworks */,
				9D64AAD0190653C40091D664 /* Headers */,
				C09762A81900726F000A4403 /* Run Script */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cocos2dXiOSProfile;
			productName = SoomlaIOSStore;
			productReference = C0B3C5EF168C6D0C00161FAA /* libCocos2dXiOSProfile.a */;
			productType = "com.apple.product-type.library.static";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		C0B3C5E6168C6D0C00161FAA /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0450;
				ORGANIZATIONNAME = SOOMLA;
			};
			buildConfigurationList = C0B3C5E9168C6D0C00161FAA /* Build configuration list for PBXProject "Cocos2dXiOSProfile" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = C0B3C5E4168C6D0C00161FAA;
			productRefGroup = C0B3C5F0168C6D0C00161FAA /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				C0B3C5EE168C6D0C00161FAA /* Cocos2dXiOSProfile */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		C09762A81900726F000A4403 /* Run Script */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "##########################################\n#\n# c.f. http://stackoverflow.com/questions/3520977/build-fat-static-library-device-simulator-using-xcode-and-sdk-4\n#\n# Version 2.7\n#\n# Latest Change:\n# - Supports iPhone 5 / iPod Touch 5 (uses Apple's workaround to lipo bug)\n#\n# Purpose:\n#   Automatically create a Universal static library for iPhone + iPad + iPhone Simulator from within XCode\n#\n# Author: Adam Martin - http://twitter.com/redglassesapps\n# Based on: original script from Eonil (main changes: Eonil's script WILL NOT WORK in Xcode GUI - it WILL CRASH YOUR COMPUTER)\n#\n\nset -e\nset -o pipefail\n\n#################[ Tests: helps workaround any future bugs in Xcode ]########\n#\nDEBUG_THIS_SCRIPT=\"false\"\n\nif [ $DEBUG_THIS_SCRIPT = \"true\" ]\nthen\necho \"########### TESTS #############\"\necho \"Use the following variables when debugging this script; note that they may change on recursions\"\necho \"BUILD_DIR = $BUILD_DIR\"\necho \"BUILD_ROOT = $BUILD_ROOT\"\necho \"CONFIGURATION_BUILD_DIR = $CONFIGURATION_BUILD_DIR\"\necho \"BUILT_PRODUCTS_DIR = $BUILT_PRODUCTS_DIR\"\necho \"CONFIGURATION_TEMP_DIR = $CONFIGURATION_TEMP_DIR\"\necho \"TARGET_BUILD_DIR = $TARGET_BUILD_DIR\"\nfi\n\n#####################[ part 1 ]##################\n# First, work out the BASESDK version number (NB: Apple ought to report this, but they hide it)\n#    (incidental: searching for substrings in sh is a nightmare! Sob)\n\nSDK_VERSION=$(echo ${SDK_NAME} | grep -o '.\\{3\\}$')\n\n# Next, work out if we're in SIM or DEVICE\n\nif [ ${PLATFORM_NAME} = \"iphonesimulator\" ]\nthen\nOTHER_SDK_TO_BUILD=iphoneos${SDK_VERSION}\nelse\nOTHER_SDK_TO_BUILD=iphonesimulator${SDK_VERSION}\nfi\n\necho \"XCode has selected SDK: ${PLATFORM_NAME} with version: ${SDK_VERSION} (although back-targetting: ${IPHONEOS_DEPLOYMENT_TARGET})\"\necho \"...therefore, OTHER_SDK_TO_BUILD = ${OTHER_SDK_TO_BUILD}\"\n#\n#####################[ end of part 1 ]##################\n\n#####################[ part 2 ]##################\n#\n# IF this is the original invocation, invoke WHATEVER other builds are required\n#\n# Xcode is already building ONE target...\n#\n# ...but this is a LIBRARY, so Apple is wrong to set it to build just one.\n# ...we need to build ALL targets\n# ...we MUST NOT re-build the target that is ALREADY being built: Xcode WILL CRASH YOUR COMPUTER if you try this (infinite recursion!)\n#\n#\n# So: build ONLY the missing platforms/configurations.\n\nif [ \"true\" == ${ALREADYINVOKED:-false} ]\nthen\necho \"RECURSION: I am NOT the root invocation, so I'm NOT going to recurse\"\nelse\n# CRITICAL:\n# Prevent infinite recursion (Xcode sucks)\nexport ALREADYINVOKED=\"true\"\n\necho \"RECURSION: I am the root ... recursing all missing build targets NOW...\"\necho \"RECURSION: ...about to invoke: xcodebuild -configuration \\\"${CONFIGURATION}\\\" -project \\\"${PROJECT_NAME}.xcodeproj\\\" -target \\\"${TARGET_NAME}\\\" -sdk \\\"${OTHER_SDK_TO_BUILD}\\\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO\" BUILD_DIR=\\\"${BUILD_DIR}\\\" BUILD_ROOT=\\\"${BUILD_ROOT}\\\" SYMROOT=\\\"${SYMROOT}\\\"\n\nxcodebuild -configuration \"${CONFIGURATION}\" -project \"${PROJECT_NAME}.xcodeproj\" -target \"${TARGET_NAME}\" -sdk \"${OTHER_SDK_TO_BUILD}\" ${ACTION} RUN_CLANG_STATIC_ANALYZER=NO BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\" SYMROOT=\"${SYMROOT}\"\n\nACTION=\"build\"\n\n#Merge all platform binaries as a fat binary for each configurations.\n\n# Calculate where the (multiple) built files are coming from:\nCURRENTCONFIG_DEVICE_DIR=${SYMROOT}/${CONFIGURATION}-iphoneos\nCURRENTCONFIG_SIMULATOR_DIR=${SYMROOT}/${CONFIGURATION}-iphonesimulator\n\necho \"Taking device build from: ${CURRENTCONFIG_DEVICE_DIR}\"\necho \"Taking simulator build from: ${CURRENTCONFIG_SIMULATOR_DIR}\"\n\nif [[ -z $CREATING_UNIVERSAL_DIR ]]\nthen\nCREATING_UNIVERSAL_DIR=${SYMROOT}/${CONFIGURATION}-universal\nfi\necho \"...I will output a universal build to: ${CREATING_UNIVERSAL_DIR}\"\n\n# ... remove the products of previous runs of this script\n#      NB: this directory is ONLY created by this script - it should be safe to delete!\n\n# rm -rf \"${CREATING_UNIVERSAL_DIR}\"\nmkdir -p \"${CREATING_UNIVERSAL_DIR}\"\n\n#\necho \"lipo: for current configuration (${CONFIGURATION}) creating output file: ${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}\"\nxcrun -sdk iphoneos lipo -create -output \"${CREATING_UNIVERSAL_DIR}/${EXECUTABLE_NAME}\" \"${CURRENTCONFIG_DEVICE_DIR}/${EXECUTABLE_NAME}\" \"${CURRENTCONFIG_SIMULATOR_DIR}/${EXECUTABLE_NAME}\"\n\n#########\n#\n# Added: StackOverflow suggestion to also copy \"include\" files\n#    (untested, but should work OK)\n#\necho \"Fetching headers from ${PUBLIC_HEADERS_FOLDER_PATH}\"\necho \"  (if you embed your library project in another project, you will need to add\"\necho \"   a \"User Search Headers\" build setting of: (NB INCLUDE THE DOUBLE QUOTES BELOW!)\"\nif [ -d \"${CURRENTCONFIG_DEVICE_DIR}/${PUBLIC_HEADERS_FOLDER_PATH}\" ]\nthen\nmkdir -p \"${CREATING_UNIVERSAL_DIR}/headers/${PROJECT_NAME}\"\n# * needs to be outside the double quotes?\ncp -r \"${CURRENTCONFIG_DEVICE_DIR}/${PUBLIC_HEADERS_FOLDER_PATH}/\"* \"${CREATING_UNIVERSAL_DIR}/headers/${PROJECT_NAME}\"\nfi\nfi\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		C0B3C5EB168C6D0C00161FAA /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				F8BBDCA01AB1E4DA00FD9403 /* CCProfileBridgeBinderIos.mm in Sources */,
				F8BBDC9A1AB1D40600FD9403 /* ProfileBridge.mm in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		C0B3C5FB168C6D0C00161FAA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "c++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = NO;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				GCC_C_LANGUAGE_STANDARD = c11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREFIX_HEADER = Prefix.pch;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
				);
				IPHONEOS_DEPLOYMENT_TARGET = 7.1;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		C0B3C5FC168C6D0C00161FAA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_CXX_LANGUAGE_STANDARD = "c++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_OBJC_ARC = NO;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = YES;
				GCC_C_LANGUAGE_STANDARD = c11;
				GCC_PREFIX_HEADER = Prefix.pch;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
				);
				IPHONEOS_DEPLOYMENT_TARGET = 7.1;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		C0B3C5FE168C6D0C00161FAA /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DSTROOT = /tmp/SoomlaIOSStore.dst;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"COCOS2D_DEBUG=1",
					CC_TARGET_OS_IPHONE,
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
					"$(SRCROOT)/../../../../../cocos",
					"$(SRCROOT)/../../../../../cocos/base",
					"$(SRCROOT)/../../../../../cocos/2d",
					"$(SRCROOT)/../../../../../cocos/platform/ios",
					"$(SRCROOT)/../../../../../cocos/platform/ios/Simulation",
					"$(SRCROOT)/../../../../../external/jansson",
					"$(SRCROOT)/../../compilations/ios/headers/**",
					"$(SRCROOT)/../../../submodules/ios-profile/SoomlaiOSProfile/**",
					"$(SRCROOT)/../../../../../soomla-cocos2dx-core/build/ios/headers/**",
					"$(SRCROOT)/../../../../../soomla-cocos2dx-core/Soomla/**",
				);
				LIBRARY_SEARCH_PATHS = "";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_LDFLAGS = "-ObjC";
				PRIVATE_HEADERS_FOLDER_PATH = headers/private;
				PRODUCT_NAME = Cocos2dXiOSProfile;
				PUBLIC_HEADERS_FOLDER_PATH = headers/public;
				SKIP_INSTALL = YES;
				SYMROOT = out;
				WRAPPER_EXTENSION = framework;
			};
			name = Debug;
		};
		C0B3C5FF168C6D0C00161FAA /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				DSTROOT = /tmp/SoomlaIOSStore.dst;
				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREPROCESSOR_DEFINITIONS = CC_TARGET_OS_IPHONE;
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include,
					"$(SRCROOT)/../../../../../cocos",
					"$(SRCROOT)/../../../../../cocos/base",
					"$(SRCROOT)/../../../../../cocos/2d",
					"$(SRCROOT)/../../../../../cocos/platform/ios",
					"$(SRCROOT)/../../../../../cocos/platform/ios/Simulation",
					"$(SRCROOT)/../../../../../external/jansson",
					"$(SRCROOT)/../../compilations/ios/headers/**",
					"$(SRCROOT)/../../../submodules/ios-profile/SoomlaiOSProfile/**",
					"$(SRCROOT)/../../../../../soomla-cocos2dx-core/build/ios/headers/**",
					"$(SRCROOT)/../../../../../soomla-cocos2dx-core/Soomla/**",
				);
				LIBRARY_SEARCH_PATHS = "";
				LINK_WITH_STANDARD_LIBRARIES = NO;
				ONLY_ACTIVE_ARCH = NO;
				OTHER_LDFLAGS = "-ObjC";
				PRIVATE_HEADERS_FOLDER_PATH = headers/private;
				PRODUCT_NAME = Cocos2dXiOSProfile;
				PUBLIC_HEADERS_FOLDER_PATH = headers/public;
				SKIP_INSTALL = YES;
				SYMROOT = out;
				WRAPPER_EXTENSION = framework;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		C0B3C5E9168C6D0C00161FAA /* Build configuration list for PBXProject "Cocos2dXiOSProfile" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C0B3C5FB168C6D0C00161FAA /* Debug */,
				C0B3C5FC168C6D0C00161FAA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		C0B3C5FD168C6D0C00161FAA /* Build configuration list for PBXNativeTarget "Cocos2dXiOSProfile" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C0B3C5FE168C6D0C00161FAA /* Debug */,
				C0B3C5FF168C6D0C00161FAA /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = C0B3C5E6168C6D0C00161FAA /* Project object */;
}
